{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar uuidv1 = require(\"uuid/v1\");\nvar uuidv5 = require(\"uuid/v5\");\nvar hash = require(\"object-hash\");\nvar LazyComp_1 = require(\"./LazyComp\");\nvar utils_1 = require(\"./utils\");\n/**\n * useLazy Custom Hook\n * @param {component array} components\n * @param {use to divide components into chunk} chunkNumber\n * @param {wrap styles} styles\n * @param {loading component} loadingComponent\n */\nfunction useLazy(components, chunkNumber, styles, loadingComponent) {\n  if (chunkNumber === void 0) {\n    chunkNumber = 5;\n  }\n  if (loadingComponent === void 0) {\n    loadingComponent = React.createElement(\"div\", {\n      style: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    }, \"loading...\");\n  }\n  // id list of LazyComp list\n  var _a = react_1.useState([]),\n    ids = _a[0],\n    setIds = _a[1];\n  // render result\n  var _b = react_1.useState([]),\n    lazyComponents = _b[0],\n    setLazyComponents = _b[1];\n  // split 'ids' by 'chunkNumber'\n  var _c = react_1.useState([]),\n    chunkIdList = _c[0],\n    setChunkIdList = _c[1];\n  // current chunk that show in window\n  var _d = react_1.useState([]),\n    currentIdList = _d[0],\n    setCurrentIdList = _d[1];\n  var lastIds = react_1.useRef(ids);\n  var lastChunkIdList = react_1.useRef(chunkIdList);\n  var lastCurrentIdList = react_1.useRef(currentIdList);\n  var _timeId = null;\n  // update last value\n  react_1.useEffect(function () {\n    lastIds.current = ids;\n    lastChunkIdList.current = chunkIdList;\n    lastCurrentIdList.current = currentIdList;\n  }, [hash(ids), hash(chunkIdList), hash(currentIdList)]);\n  // generate ids\n  react_1.useEffect(function () {\n    var _ids = [];\n    components && components.forEach(function (comp, i) {\n      var id = \"lazy_comp_\" + comp.type + \"_\" + uuidv5(\"lazy_comp\" + i, uuidv1());\n      _ids.push(id);\n    });\n    setIds(_ids);\n  }, [components.length, chunkNumber]);\n  // wrap components with 'LazyComp'\n  react_1.useEffect(function () {\n    setLazyComponents(components && components.map(function (comp, i) {\n      return React.createElement(LazyComp_1.default, {\n        key: i,\n        id: lastIds.current[i],\n        loadingComponent: loadingComponent,\n        isShowContent: lastCurrentIdList.current.indexOf(lastIds.current[i]) != -1,\n        styles: styles\n      }, comp);\n    }));\n    var _chunkIdList = utils_1.chunkArray(lastIds.current, chunkNumber);\n    setChunkIdList(_chunkIdList);\n  }, [components.length, chunkNumber, hash(ids), hash(currentIdList)]);\n  // for the FIRST render\n  react_1.useEffect(function () {\n    setCurrentIdList(utils_1.chunkArray(lastIds.current, chunkNumber)[0] || []);\n  }, [hash(ids)]);\n  // scroll event\n  react_1.useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [components.length, chunkNumber]);\n  function handleScroll() {\n    if (_timeId) {\n      window.clearTimeout(_timeId);\n    }\n    _timeId = window.setTimeout(function () {\n      var _currentIdList = lastChunkIdList.current.find(function (idList) {\n        return idList.indexOf(utils_1.getIdInWindow(lastIds.current)) != -1;\n      });\n      setCurrentIdList(_currentIdList);\n    }, 500);\n  }\n  return [lazyComponents];\n}\nexports.useLazy = useLazy;","map":{"version":3,"names":["React","require","react_1","uuidv1","uuidv5","hash","LazyComp_1","utils_1","useLazy","components","chunkNumber","styles","loadingComponent","createElement","style","height","display","justifyContent","alignItems","_a","useState","ids","setIds","_b","lazyComponents","setLazyComponents","_c","chunkIdList","setChunkIdList","_d","currentIdList","setCurrentIdList","lastIds","useRef","lastChunkIdList","lastCurrentIdList","_timeId","useEffect","current","_ids","forEach","comp","i","id","type","push","length","map","default","key","isShowContent","indexOf","_chunkIdList","chunkArray","window","addEventListener","handleScroll","removeEventListener","clearTimeout","setTimeout","_currentIdList","find","idList","getIdInWindow","exports"],"sources":["/Users/francisco/Documents/Curso desarrollo web/Proyectos/Portafolio/ProyectoReact/pokedex/node_modules/react-uselazy/src/useLazy.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect, useRef } from 'react';\nimport * as uuidv1 from 'uuid/v1'\nimport * as uuidv5 from 'uuid/v5'\nimport * as hash from 'object-hash'\nimport LazyComp from './LazyComp';\nimport { getIdInWindow, chunkArray } from './utils'\n\n/**\n * useLazy Custom Hook\n * @param {component array} components \n * @param {use to divide components into chunk} chunkNumber \n * @param {wrap styles} styles \n * @param {loading component} loadingComponent \n */\nfunction useLazy(\n  components: Array<React.ReactElement>, \n  chunkNumber: number = 5, \n  styles: object, \n  loadingComponent: React.ReactNode = <div style={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>loading...</div>): Array<React.ReactNode> {\n\n  // id list of LazyComp list\n  const [ ids, setIds ] = useState([]);\n\n  // render result\n  const [ lazyComponents, setLazyComponents ] = useState([]);\n\n  // split 'ids' by 'chunkNumber'\n  const [ chunkIdList, setChunkIdList ] = useState([]);\n\n  // current chunk that show in window\n  const [ currentIdList, setCurrentIdList ] = useState([]);\n\n  const lastIds = useRef(ids);\n  const lastChunkIdList = useRef(chunkIdList);\n  const lastCurrentIdList = useRef(currentIdList);\n\n  let _timeId: number = null;\n\n  // update last value\n  useEffect(\n    () => {\n      lastIds.current = ids;\n      lastChunkIdList.current = chunkIdList;\n      lastCurrentIdList.current = currentIdList;\n    },\n    [hash(ids), hash(chunkIdList), hash(currentIdList)]\n  )\n\n  // generate ids\n  useEffect(\n    () => {\n      const _ids: string[] = [];\n      components && components.forEach((comp, i) => {\n        const id = `lazy_comp_${comp.type}_${uuidv5(`lazy_comp${i}`, uuidv1())}`;\n        _ids.push(id);\n      });\n      setIds(_ids);\n    },\n    [components.length, chunkNumber]\n  )\n\n  // wrap components with 'LazyComp'\n  useEffect(\n    () => {\n      setLazyComponents(components && components.map((comp, i) => {\n        return (\n          <LazyComp key={i} id={lastIds.current[i]} loadingComponent={loadingComponent} isShowContent={lastCurrentIdList.current.indexOf(lastIds.current[i]) != -1} styles={styles}>\n            { comp }\n          </LazyComp>\n        )\n      }));\n      const _chunkIdList = chunkArray(lastIds.current, chunkNumber);\n      setChunkIdList(_chunkIdList);\n    },\n    [components.length, chunkNumber, hash(ids), hash(currentIdList)]\n  )\n\n  // for the FIRST render\n  useEffect(\n    () => {\n      setCurrentIdList(chunkArray(lastIds.current, chunkNumber)[0] || []);\n    },\n    [hash(ids)]\n  )\n    \n  // scroll event\n  useEffect(\n    () => {\n      window.addEventListener('scroll', handleScroll);\n      return () => {\n          window.removeEventListener('scroll', handleScroll);\n      }\n    },\n    [components.length, chunkNumber]\n  )\n    \n  function handleScroll() {\n    if(_timeId){\n      window.clearTimeout(_timeId);\n    }\n\n    _timeId = window.setTimeout(() => {\n      const _currentIdList = lastChunkIdList.current.find(idList => idList.indexOf(getIdInWindow(lastIds.current)) != -1);\n      setCurrentIdList(_currentIdList);\n    }, 500);\n  }\n\n  return [ lazyComponents ];\n}\n\nexport {\n  useLazy\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}